#
# ─── ONLY WAY TO GET SHELL ALIASES ───────────────────────────────────────────────
#

export_function () {
    local name=$1
    local alias_dir=$PWD/.direnv/aliases
    mkdir -p "$alias_dir"
    PATH_add "$alias_dir"
    local target="$alias_dir/$name"
    if declare -f "$name" >/dev/null; then
        echo "#!/usr/bin/env bash" > "$target"
        declare -f "$name" >> "$target" 2>/dev/null
        # Notice that we add shell variables to the function trigger.
        echo "$name \$*" >> "$target"
        chmod +x "$target"
    fi
}

#
# ─── SSH ALIAS ──────────────────────────────────────────────────────────────────
#

# we're exporting this so it can be used in the alias
export expanded_config_path=$(expand_path ./config/ssh/config)

ssh-vm () {
    ssh -F "$expanded_config_path" vm "$@"
}

#
# ─── EXIT GRACEFULLY ──────────────────────────────────────────────────────────────────
#

check-config () {
    set -eu

    if [ ! -f "$PWD/configuration.nix" ]; then
        echo "Please run this command in a directory with a configuration.nix"
        exit 1
    fi
}

#
# ─── VM RUNNING ALIASES ──────────────────────────────────────────────────────────
#

# change me if this path changes
export nixpkgs_path="$HOME/Code/nix/nixpkgs"

echo-pkgs () {
    set -eu

    echo "nixpkgs used by NixOS VMs: $nixpkgs_path"
}

run-vm () {
    set -eu

    echo-pkgs
    check-config

    nix run vm -f "$nixpkgs_path/nixos" --arg configuration "$PWD/configuration.nix" -c run-nixos-vm
}

run-vm-with-bootloader () {
    set -eu

    echo-pkgs
    check-config

    nix run vmWithBootLoader -f "$nixpkgs_path/nixos" --arg configuration "$PWD"/configuration.nix -c run-nixos-vm
}

#
# ─── BUILD NIXOS SYSTEM ATTR ──────────────────────────────────────────────────────────
#

build-system () {
    set -eu

    echo-pkgs
    check-config

    nix build system -f "$nixpkgs_path/nixos" --arg configuration "$PWD/configuration.nix"
}

#
# ─── CLEANUP THE MESS ──────────────────────────────────────────────────────────
#

cleanup () {
    set -eu

    # Delete qcow2's
    find . -type f -name '*.qcow2' -delete

    # Delete symlinks
    find . -type l -name 'result' -delete
}

#
# ─── HELPFUL REMINDER ───────────────────────────────────────────────────────
#

help () {
    printf "
Aliases
-------------

- cleanup (deletes result symlinks and qcow2 files)
- echo-pkgs (shows nixpkgs_path)
- build-system
- run-vm
- run-vm-with-bootloader
- ssh-vm
- help (show this message)
"

}

#
# ─── EXPORT THE FUNCTIONS ───────────────────────────────────────────────────────
#

# helper
export_function check-config

export_function cleanup
export_function echo-pkgs
export_function build-system
export_function run-vm
export_function run-vm-with-bootloader
export_function ssh-vm
export_function help

#
# ─── SHOW HELP MESSAGE ──────────────────────────────────────────────────────────
#

help

# ────────────────────────────────────────────────────────────────────────────────
